{"ast":null,"code":"var _jsxFileName = \"/Users/elijahcohen/Desktop/sandbox/cosmic-explorer/src/Components/APoD.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APoD = () => {\n  _s();\n  const [date, setDate] = useState('');\n  useEffect(() => {\n    const today = new Date();\n    const options = {\n      weekday: 'short',\n      year: 'numeric',\n      month: '2-digit',\n      day: 'numeric'\n    };\n    setDate(`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`);\n  }, []);\n  const formatToday = () => {\n    const today = new Date();\n    const options = {\n      weekday: 'short',\n      year: 'numeric',\n      month: '2-digit',\n      day: 'numeric'\n    };\n    console.log(today.toLocaleString('en', options));\n  };\n  const handleDateChange = e => {\n    setDate(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"APoD\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n_s(APoD, \"EHDxiaxkSKMYIDPOBLM2vs0AotU=\");\n_c = APoD;\nexport default APoD;\nvar _c;\n$RefreshReg$(_c, \"APoD\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","APoD","_s","date","setDate","today","Date","options","weekday","year","month","day","getFullYear","getMonth","getDate","formatToday","console","log","toLocaleString","handleDateChange","e","target","value","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/elijahcohen/Desktop/sandbox/cosmic-explorer/src/Components/APoD.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst APoD = () => {\n\tconst [date, setDate] = useState('');\n\n\tuseEffect(() => {\n\t\tconst today = new Date();\n\n\t\tconst options = {\n\t\t\tweekday: 'short',\n\t\t\tyear: 'numeric',\n\t\t\tmonth: '2-digit',\n\t\t\tday: 'numeric',\n\t\t};\n\t\tsetDate(`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`);\n\t}, []);\n\n\tconst formatToday = () => {\n\t\tconst today = new Date();\n\n\t\tconst options = {\n\t\t\tweekday: 'short',\n\t\t\tyear: 'numeric',\n\t\t\tmonth: '2-digit',\n\t\t\tday: 'numeric',\n\t\t};\n\n\t\tconsole.log(today.toLocaleString('en', options));\n\t};\n\n\tconst handleDateChange = (e) => {\n\t\tsetDate(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"APoD\">\n\t\t\t<input type=\"date\" value={date} onChange={handleDateChange} />\n\t\t</div>\n\t);\n};\n\nexport default APoD;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACf,MAAMQ,KAAK,GAAG,IAAIC,IAAI,EAAE;IAExB,MAAMC,OAAO,GAAG;MACfC,OAAO,EAAE,OAAO;MAChBC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE;IACN,CAAC;IACDP,OAAO,CAAE,GAAEC,KAAK,CAACO,WAAW,EAAG,IAAGP,KAAK,CAACQ,QAAQ,EAAE,GAAG,CAAE,IAAGR,KAAK,CAACS,OAAO,EAAG,EAAC,CAAC;EAC7E,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACzB,MAAMV,KAAK,GAAG,IAAIC,IAAI,EAAE;IAExB,MAAMC,OAAO,GAAG;MACfC,OAAO,EAAE,OAAO;MAChBC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE;IACN,CAAC;IAEDK,OAAO,CAACC,GAAG,CAACZ,KAAK,CAACa,cAAc,CAAC,IAAI,EAAEX,OAAO,CAAC,CAAC;EACjD,CAAC;EAED,MAAMY,gBAAgB,GAAIC,CAAC,IAAK;IAC/BhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxB,CAAC;EAED,oBACCtB,OAAA;IAAKuB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACpBxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACH,KAAK,EAAEnB,IAAK;MAACuB,QAAQ,EAAEP;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzD;AAER,CAAC;AAAC5B,EAAA,CArCID,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}